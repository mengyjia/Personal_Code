bigquery stackoverflow data

https://bigquery.cloud.google.com/dataset/bigquery-public-data:stackoverflow (Links to an external site.)

1.Play with these four tables, and figure out PK and FK of post_id.
This is a typical stackoverflow post question with comments and answers.

https://stackoverflow.com/questions/40207741/javascript-function-just-wont-run (Links to an external site.)Links to an external site.

Hint: 40207741 =  posts_questions.id

 

2. Users Count

Create a report with monthly New Users Count and EOM total # of Users (running total)

3. YoY comparison (Year to year comparison)

Include two additional metrics in above report: LY New Users Count, and LY EOM total # of Users. If current month is 10/2017, then LY New Users Count is: 10/2016. You can use analytical functions or the date dimension.

#4, #5, #6 are all related

4. Monthly Active Users

Let’s define Active as:

As long as the user post a question, or a comment or an answer, we consider (s)he is active in that day or month.

 Final MAU fact_table can start from following columns. (createTs is only used for incremental ETL as we learnt in class, it is not that meaningful in this exercise since we’re loading everything within one batch.)

Month, User_id (, createTs )

 The final monthly active count will be a simple select from above table.

5. Monthly Active Users by type to understand their engagement level, e.g.: Monthly Post-Question Active, Monthly Make-Comments Active, Monthly Answer-Question Active. And we know one user can be in one, two or all three of these buckets, and these active numbers are not additive. Below is one way we can address this problem:

Month, User_id, question_flag, comment_flag, answer_flag(, createTs)

 Note: this table should have exact same # of records as above table.

6. Monthly Active Users by New and Returning

New/Returning Active: If the users has been created in the same month, then “New”, else “Returning” . Note a user can be either “New” or “Returning” in the given period of time. So New and Returning counts are additive.

Month, User_id, new_vs_ret, question_flag, comment_flag, answer_flag(, createTs)

1/2017, 123, ‘New’, 1,1,0

6/2017, 345, ‘New’, 0,1,0

9/2017, 123, ’Ret’,  1,0,1


Q1
id in posts_questions is its PK.


Post_id in comments is its FK related to posts_questions.
id

Parent_id in posts_answers is its FK related to posts_questions.id
Q2
select *, sum(New_Users) over (order by Month rows unbounded preceding) Cumulative_Users
from(
select count( id) New_Users, date_trunc( date(creation_date), Month) Month
from `bigquery-public-data.stackoverflow.users` 
group by
Month
order by Month)
order by 
Month

Q3


select a.*, b.New_Users LY_New_Users, b.Cumulative_Users LY_Cumulative_Users
from 
(select *, sum(New_Users) over (order by Month rows unbounded preceding) Cumulative_Users
from(
select count( id) New_Users, date_trunc( date(creation_date), Month) Month
from `bigquery-public-data.stackoverflow.users` 
group by
Month
order by Month)
order by 
Month) a
left join 
(select *, sum(New_Users) over (order by Month rows unbounded preceding) Cumulative_Users
from(
select count( id) New_Users, date_trunc( date(creation_date), Month) Month
from `bigquery-public-data.stackoverflow.users` 
group by
Month
order by Month)
order by 
Month) b
on a.Month = date_add(b.Month,interval 1 year)
order by 
a.Month


Q4


select distinct a.user_id, date_trunc(date(a.creation_date),month) month
from 
`bigquery-public-data.stackoverflow.comments` a
union distinct
select distinct b. owner_user_id, date_trunc(date(b.creation_date),month) month
from
`bigquery-public-data.stackoverflow.posts_answers`  b
union distinct
select distinct c. owner_user_id, date_trunc(date(c.creation_date),month) month
from
`bigquery-public-data.stackoverflow.posts_questions` c
order by 
month, user_id

Q5

#########Method1

select a.user_id, a.month, ifnull(a.comment_flag,0) comment_flag, ifnull(b.answer_flag,0) answer_flag,ifnull(c.question_flag,0) question_flag
from
(select distinct user_id, date_trunc(date(a.creation_date),month) month, 1 as comment_flag
from 
`bigquery-public-data.stackoverflow.comments` a) a
full join
(select distinct b. owner_user_id, date_trunc(date(b.creation_date),month) month, 1 as answer_flag
from
`bigquery-public-data.stackoverflow.posts_answers`  b) b
on a.user_id = b. owner_user_id
full join
(select distinct c. owner_user_id, date_trunc(date(c.creation_date),month) month, 1 as question_flag
from
`bigquery-public-data.stackoverflow.posts_questions` c) c
on a.user_id = c.owner_user_id
order by 
month, user_id

############Method2

WITH table1 as (select distinct a.user_id, date_trunc(date(a.creation_date),month) month
from 
`bigquery-public-data.stackoverflow.comments` a
union distinct
select distinct b. owner_user_id, date_trunc(date(b.creation_date),month) month
from
`bigquery-public-data.stackoverflow.posts_answers`  b
union distinct
select distinct c. owner_user_id, date_trunc(date(c.creation_date),month) month
from
`bigquery-public-data.stackoverflow.posts_questions` c
order by 
month, user_id)

select table1.*, ifnull(a1.comment_flag,0) comment_flag , ifnull(b1.answer_flag,0) answer_flag, ifnull(c1.question_flag,0) question_flag
from
table1
left join 
(select distinct user_id, date_trunc(date(a.creation_date),month) month, 1 as comment_flag
from 
`bigquery-public-data.stackoverflow.comments` a) a1
on table1.user_id = a1.user_id and table1.month = a1.month
left join
(select distinct b. owner_user_id, date_trunc(date(b.creation_date),month) month, 1 as answer_flag
from
`bigquery-public-data.stackoverflow.posts_answers`  b) b1
on table1.user_id = b1.owner_user_id and table1.month = b1.month
left join
(select distinct c. owner_user_id, date_trunc(date(c.creation_date),month) month, 1 as question_flag
from
`bigquery-public-data.stackoverflow.posts_questions` c) c1
on table1.user_id = c1.owner_user_id and table1.month = c1.month


Q6
WITH table1 as (select distinct a.user_id, date_trunc(date(a.creation_date),month) month
from 
`bigquery-public-data.stackoverflow.comments` a
union distinct
select distinct b. owner_user_id, date_trunc(date(b.creation_date),month) month
from
`bigquery-public-data.stackoverflow.posts_answers`  b
union distinct
select distinct c. owner_user_id, date_trunc(date(c.creation_date),month) month
from
`bigquery-public-data.stackoverflow.posts_questions` c
order by 
month, user_id),
table2 as (
select table1.*, ifnull(a1.comment_flag,0) comment_flag , ifnull(b1.answer_flag,0) answer_flag, ifnull(c1.question_flag,0) question_flag
from
table1
left join 
(select distinct user_id, date_trunc(date(a.creation_date),month) month, 1 as comment_flag
from 
`bigquery-public-data.stackoverflow.comments` a) a1
on table1.user_id = a1.user_id and table1.month = a1.month
left join
(select distinct b. owner_user_id, date_trunc(date(b.creation_date),month) month, 1 as answer_flag
from
`bigquery-public-data.stackoverflow.posts_answers`  b) b1
on table1.user_id = b1.owner_user_id and table1.month = b1.month
left join
(select distinct c. owner_user_id, date_trunc(date(c.creation_date),month) month, 1 as question_flag
from
`bigquery-public-data.stackoverflow.posts_questions` c) c1
on table1.user_id = c1.owner_user_id and table1.month = c1.month)

select table2.*, 
case 
when table2.month = date_trunc(date(table3.creation_date ),month)
then "New"
else
"Return"
end new_vs_ret
from table2
left join 
`bigquery-public-data.stackoverflow.users` table3
on
table2.user_id = table3.id








